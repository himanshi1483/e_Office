@model e_Office.Models.TaskModel

@{
    ViewBag.Title = "Create";
}

    <div class="row text-center">
        <div class="col-md-2">
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title m-b-0">Create Task</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.Label("Task Summary", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.TaskSummary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskSummary, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.Label("Task Start Date", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control mydatepicker" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.Label("Task Due Date", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control mydatepicker" } })
                                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.Label("Task Priority", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(x => x.TaskPriority, EnumHelper.GetSelectList(typeof(e_Office.Models.EnumModel.Priority)), "-Select-", new { @class = "select2 form-control custom-select" })
                                @Html.ValidationMessageFor(model => model.TaskPriority, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.Label("Task Assigned To", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.AssignedTo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.Label("Task Complete?", htmlAttributes: new { @class = "col-sm-3 text-right control-label col-form-label" })
                            <div class="col-md-2">
                                <div class="custom-control custom-checkbox mr-sm-2">
                                    @*@Html.EditorFor(model => model.IsHOD, new { @type = "checkbox", @class = "custom-control-input" })*@
                                    <input type="checkbox" class="custom-control-input" name="IsComplete" id="IsComplete">
                                    <label class="custom-control-label" for="IsComplete"></label>
                                </div>
                                @*@Html.CheckBoxFor(model => model.IsComplete, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsComplete, "", new { @class = "text-danger" })*@
                            </div>

                        </div>

                        <div class="form-group row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-2">
        </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
